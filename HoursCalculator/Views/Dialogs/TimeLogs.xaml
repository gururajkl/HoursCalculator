<UserControl
    x:Class="HoursCalculator.Views.Dialogs.TimeLogs"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    BorderBrush="#FF3C7FB1"
    BorderThickness="1"
    mc:Ignorable="d">

    <prism:Dialog.WindowStyle>
        <Style TargetType="Window">
            <Setter Property="Width" Value="600" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="Height" Value="600" />
            <Setter Property="Background" Value="{DynamicResource Main.Grid.Background}" />
        </Style>
    </prism:Dialog.WindowStyle>

    <UserControl.Resources>
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border
                            Background="{DynamicResource Main.Grid.Background}"
                            BorderBrush="DarkGray"
                            BorderThickness="2">
                            <StackPanel
                                Margin="5,4,5,4"
                                ClipToBounds="True"
                                IsItemsHost="True"
                                Orientation="Vertical" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Margin="5" Background="{DynamicResource Main.Grid.Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="1"
            Margin="0,10,0,5"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Width="150"
                Padding="4"
                Command="{Binding DownloadXML}"
                Content="Download"
                Style="{DynamicResource ButtonStyle}" />
            <Button
                Width="150"
                Margin="5,0,0,0"
                Padding="4"
                Command="{Binding MergeDataCommand}"
                Content="Merge"
                Style="{DynamicResource ButtonStyle}" />
            <Button
                Width="150"
                Margin="5,0,0,0"
                Padding="4"
                Command="{Binding CloseTimeLogs}"
                Content="Close"
                Style="{DynamicResource ButtonStyle}" />
        </StackPanel>

        <DataGrid
            Name="dataGrid"
            Grid.Row="0"
            AutoGenerateColumns="False"
            Background="{DynamicResource Main.Grid.Background}"
            HeadersVisibility="Column"
            IsReadOnly="True"
            ItemsSource="{Binding TimeLogsCollection}"
            SelectedItem="{Binding SelectedItem}"
            SelectionMode="Single"
            SelectionUnit="FullRow">

            <DataGrid.InputBindings>
                <MouseBinding
                    Command="{Binding LeftDoubleClick}"
                    CommandParameter="{Binding SelectedItem}"
                    Gesture="LeftDoubleClick" />
            </DataGrid.InputBindings>

            <DataGrid.Resources>
                <SolidColorBrush
                    x:Key="{x:Static SystemColors.HighlightBrushKey}"
                    Opacity="0.2"
                    Color="#FF3C7FB1" />
                <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}" />
                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{DynamicResource Datagrid.Static.Background}" />
                    <Setter Property="Foreground" Value="{DynamicResource Datagrid.Foreground}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource Datagrid.BorderBrush}" />
                    <Setter Property="Padding" Value="5" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="{DynamicResource Datagrid.Static.Background}" />
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Padding" Value="5" />

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Datagrid.Static.Background}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource From.Tb.Background}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border
                                    Padding="{TemplateBinding Padding}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Datagrid.Static.Background}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=DataGridRow}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Date}"
                    Foreground="{DynamicResource ToTextColor}"
                    Header="Date" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding From}"
                    Foreground="{DynamicResource ToTextColor}"
                    Header="From" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding To}"
                    Foreground="{DynamicResource ToTextColor}"
                    Header="To" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding TotalSpent}"
                    Foreground="{DynamicResource ToTextColor}"
                    Header="Spent" />
                <DataGridTextColumn
                    Width="*"
                    Binding="{Binding Comments}"
                    Foreground="{DynamicResource ToTextColor}"
                    Header="Comments" />
            </DataGrid.Columns>

            <DataGrid.ContextMenu>
                <ContextMenu BorderThickness="0" Foreground="{DynamicResource ToTextColor}">
                    <MenuItem
                        Background="{DynamicResource Main.Grid.Background}"
                        Command="{Binding DeleteRow}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                        Header="Delete"
                        IsEnabled="{Binding EnableDelete}" />

                    <MenuItem
                        Background="{DynamicResource Main.Grid.Background}"
                        Command="{Binding AddComment}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                        Header="Edit Comment"
                        IsEnabled="{Binding EnableDelete}" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>
